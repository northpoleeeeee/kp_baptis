// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Fomulir {
  id            String       @id @default(cuid())
  fullname      String       @db.VarChar(50)
  kode_anggota  String       @db.VarChar(5)
  no_hp         String       @db.VarChar(15)
  tempat_lahir  String       @db.VarChar(15)
  tanggal_lahir String       @db.VarChar(25)
  name_baptis   String       @db.VarChar(50)
  jenis_kelamin String       @db.VarChar(15)
  alamat        String       @db.VarChar(100)
  name_ayah     String       @db.VarChar(50)
  name_ibu      String       @db.VarChar(50)
  jenis_baptis  Jenis_Baptis
  createdAt     DateTime     @default(now())
  user          User         @relation(fields: [user_id], references: [id])
  user_id       String       @unique
}

enum Jenis_Baptis {
  ANAK
  DEWASA
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String?   @default("USER")
  accounts      Account[]
  sessions      Session[]
  formulir      Fomulir?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
